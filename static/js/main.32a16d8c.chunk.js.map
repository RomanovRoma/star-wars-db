{"version":3,"sources":["components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/error-indicator.js","components/error-indicator/index.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/dummy-swapi-service.js","components/error-button/error-button.js","components/item-details/item-details.js","components/item-details/index.js","components/hoc-helpers/with-data.js","components/swapi-service-context/swapi-service-context.js","components/hoc-helpers/with-swapi-service.js","components/hoc-helpers/compose.js","components/hoc-helpers/with-child-function.js","components/sw-components/person-details.js","components/sw-components/planet-details.js","components/sw-components/starship-details.js","components/item-list/item-list.js","components/item-list/index.js","components/sw-components/item-lists.js","components/row/index.js","components/row/row.js","components/pages/people-page.js","components/pages/planets-page.js","components/pages/starships-page.js","components/pages/login-page.js","components/pages/secret-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","onServiceChange","className","to","onClick","SwapiService","_apiBase","_imageBase","getAllPeople","a","getResource","res","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","url","fetch","this","ok","Error","status","json","item","match","Spinner","ErrorIndicator","RandomPlanet","state","loading","onPlanetLoaded","setState","error","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","props","interval","setInterval","clearInterval","hasData","errorMessage","spinner","content","Component","defaultProps","PlanetView","Fragment","src","alt","ErrorBoundry","hasError","children","DummySwapiService","_people","_planets","_starships","ErrorButton","renderError","foo","bar","Record","field","label","ItemDetails","image","updateItem","prevProps","itemId","getData","getImageUrl","React","Children","child","cloneElement","withData","View","data","prefProps","update","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","mapMethodsToProps","Wrapped","swapiService","serviceProps","compose","func","comp","reduceRight","prevResult","f","withChildFunction","fn","ItemList","onItemSelected","renderLabel","items","renderName","PersonList","PlanetList","StarshipList","Row","left","right","withRouter","history","params","push","PlanetsPage","selectedItem","LoginPage","isLoggedIn","onLogin","SecretPage","App","value","path","render","exact","component","PeoplePage","StarshipsPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.32a16d8c.chunk.js","sourcesContent":["import Header from './header'\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './header.css'\n\nconst Header = ({ onServiceChange }) => {\n  return (\n    <div className=\"header d-flex\">\n      <h3>\n        <Link to=\"/\">Star Wars DB</Link>\n      </h3>\n      <ul className=\"d-flex\">\n        <li>\n          <Link to=\"/people/\">People</Link>\n        </li>\n        <li>\n          <Link to=\"/planets/\">Planets</Link>\n        </li>\n        <li>\n          <Link to=\"/starships/\">Starships</Link>\n        </li>\n        <li>\n          <Link to=\"/login\">Login</Link>\n        </li>\n        <li>\n          <Link to=\"/secret\">Secret</Link>\n        </li>\n      </ul>\n      <button\n          onClick={onServiceChange}\n          className=\"btn btn-primary btn-sm\">\n        Change Service\n      </button>\n    </div>\n  )\n}\n\nexport default Header"," export default class SwapiService {\n   // приватная часть класса, её не следует использовать\n   // или изменять снаружи:\n   _apiBase = \"https://swapi.dev/api\";\n   _imageBase = \"https://starwars-visualguide.com/assets/img\";\n\n   async getResource(url) {\n     const res = await fetch(`${this._apiBase}${url}`);\n\n     if (!res.ok) {\n       throw new Error(`Could not fetch ${url}, received ${res.status}`);\n     }\n\n     return await res.json();\n   }\n\n   getAllPeople = async () => {\n     const res = await this.getResource(`/people/`);\n     return res.results.map(this._transformPerson);\n   };\n\n   getPerson = async (id) => {\n     const person = await this.getResource(`/people/${id}/`);\n     return this._transformPerson(person);\n   };\n\n   getAllPlanets = async () => {\n     const res = await this.getResource(`/planets/`);\n     return res.results.map(this._transformPlanet);\n   };\n\n   getPlanet = async (id) => {\n     const planet = await this.getResource(`/planets/${id}/`);\n     return this._transformPlanet(planet);\n   };\n\n   getAllStarships = async () => {\n     const res = await this.getResource(`/starships/`);\n     return res.results.map(this._transformStarship);\n   };\n\n   getStarship = async (id) => {\n     const starship = await this.getResource(`/starships/${id}/`);\n     return this._transformStarship(starship);\n   };\n\n   getPersonImage = ({ id }) => {\n     return `${this._imageBase}/characters/${id}.jpg`;\n   };\n\n   getStarshipImage = ({ id }) => {\n     return `${this._imageBase}/starships/${id}.jpg`;\n   };\n\n   getPlanetImage = ({ id }) => {\n     return `${this._imageBase}/planets/${id}.jpg`;\n   };\n\n   _extractId(item) {\n     const idRegExp = /\\/([0-9]*)\\/$/;\n     return item.url.match(idRegExp)[1];\n   }\n\n   _transformPlanet = (planet) => {\n     return {\n       id: this._extractId(planet),\n       name: planet.name,\n       population: planet.population,\n       rotationPeriod: planet.rotation_period,\n       diameter: planet.diameter,\n     };\n   };\n\n   _transformStarship = (starship) => {\n     return {\n       id: this._extractId(starship),\n       name: starship.name,\n       model: starship.model,\n       manufacturer: starship.manufacturer,\n       costInCredits: starship.costInCredits,\n       length: starship.length,\n       crew: starship.crew,\n       passengers: starship.passengers,\n       cargoCapacity: starship.cargoCapacity,\n     };\n   };\n\n   _transformPerson = (person) => {\n     return {\n       id: this._extractId(person),\n       name: person.name,\n       gender: person.gender,\n       birthYear: person.birth_year,\n       eyeColor: person.eye_color,\n     };\n   };\n }","import Spinner from './spinner'\n\nexport default Spinner","import React from 'react'\n\nimport './spinner.css'\n\nconst Spinner = () => {\n  return (\n    <div className=\"loadingio-spinner-double-ring-nvl5o5qy8d\">\n      <div className=\"ldio-gx58oecry9o\">\n        <div></div>\n        <div></div>\n        <div>\n          <div></div>\n        </div>\n        <div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner","import React from 'react'\n\n\nimport './error-indicator.css'\n\nconst ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n      <span className=\"boom\">BOOM!</span>\n      <span>\n        something has gone terribly wrong\n      </span>\n      <span>\n        (but we already sent droids to fix it)\n      </span>\n    </div>\n  )\n}\n\nexport default ErrorIndicator","import ErrorIndicator from './error-indicator'\n\nexport default ErrorIndicator","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './random-planet.css'\n\nimport SwapiService from '../../services/swapi-service'\nimport Spinner from '../spinner'\nimport ErrorIndicator from '../error-indicator'\n\nexport default class RandomPlanet extends Component {\n\n  static defaultProps = {\n    updateInterval: 10000,\n  };\n\n  static propTypes = {\n    uodateInterval: PropTypes.number\n  }\n\n  SwapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n  };\n\n  componentDidMount() {\n    const { updateInterval } = this.props;\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, updateInterval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false,\n      error: false,\n    });\n  };\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 25) + 3;\n    this.SwapiService.getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { planet, loading, error } = this.state;\n\n    const hasData = !(loading || error);\n    const errorMessage = error ? <ErrorIndicator /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = hasData ? <PlanetView planet={planet} /> : null;\n\n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ({ planet }) => {\n\n  const { id, name, population,\n          rotationPeriod, diameter } = planet\n\n  return (\n    <React.Fragment>\n      <img\n        className=\"planet-image\"\n        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n        alt=\"planet\"\n      />\n      <div>\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population</span>\n            <span>{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period</span>\n            <span>{rotationPeriod}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter</span>\n            <span>{diameter}</span>\n          </li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n}","import RandomPlanet from './random-planet'\n\nexport default RandomPlanet","import ErrorBoundry from \"./error-boundry\";\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\n\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\n\nexport default class ErrorBoundry extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({\n      hasError: true,\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}","export default class DummySwapiService {\n  _people = [\n    {\n      id: 1,\n      name: \"Bilbo Baggins [TEST DATA]\",\n      gender: \"male\",\n      birthYear: \"long ago\",\n      eyeColor: \"dark brown\",\n    },\n\n    {\n      id: 2,\n      name: \"Frodo Baggins [TEST DATA]\",\n      gender: \"male\",\n      birthYear: \"long ago\",\n      eyeColor: \"dark brown\",\n    },\n  ];\n\n  _planets = [\n    {\n      id: 1,\n      name: \"Earth [TEST DATA]\",\n      population: \"7.530.000.000\",\n      rotationPeriod: \"23 hours 56 seconds\",\n      diameter: \"12.742 km\",\n    },\n    {\n      id: 2,\n      name: \"Venus [TEST DATA]\",\n      population: \"not known\",\n      rotationPeriod: \"243 days\",\n      diameter: \"12.104 km\",\n    },\n  ];\n\n  _starships = [\n    {\n      id: 1,\n      name: \"USS Enterprise [TEST DATA]\",\n      model: \"NCC-1701-C\",\n      manufacturer: \"Northrop Grumman Shipbuilding\",\n      costInCredits: \"not known\",\n      length: \"approx 300 meters\",\n      crew: 1000,\n      passengers: 50,\n      cargoCapacity: 100,\n    },\n  ];\n\n  getAllPeople = async () => {\n    return this._people;\n  };\n\n  getPerson = async () => {\n    return this._people[0];\n  };\n\n  getAllPlanets = async () => {\n    return this._planets;\n  };\n\n  getPlanet = async () => {\n    return this._planets[0];\n  };\n\n  getAllStarships = async () => {\n    return this._starships;\n  };\n\n  getStarship = async () => {\n    return this._starships[0];\n  };\n\n  getPersonImage = () => {\n    return `https://placeimg.com/400/500/people`;\n  };\n\n  getStarshipImage = () => {\n    return `https://placeimg.com/600/400/tech`;\n  };\n\n  getPlanetImage = () => {\n    return `https://placeimg.com/400/400/nature`;\n  };\n}\n","import React, { Component } from 'react'\n\nimport './error-button.css'\n\nexport default class ErrorButton extends Component {\n\n  state = {\n    renderError: false\n  }\n\n  render() {\n    if (this.state.renderError) {\n      this.foo.bar = 0\n    }\n\n    return (\n      <button\n        className=\"error-button btn btn-danger btn-lg\"\n        onClick={() => this.setState({renderError: true})}>\n        Throw Error\n      </button>\n    )\n  }\n}","import React, { Component } from \"react\";\n\nimport ErrorButton from \"../error-button/error-button\";\n\nimport \"./item-details.css\";\n\nconst Record = ({ item, field, label }) => {\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"term\">{label}</span>\n      <span>{item[field]}</span>\n    </li>\n  );\n};\n\nexport { Record };\n\nexport default class ItemDetails extends Component {\n  state = {\n    item: null,\n    image: null,\n  };\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId ||\n      this.props.getData !== prevProps.getData ||\n      this.props.getImageUrl !== prevProps.getImageUrl) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const { itemId, getData, getImageUrl } = this.props;\n    if (!itemId) {\n      return;\n    }\n\n    getData(itemId).then((item) => {\n      this.setState({\n        item,\n        image: getImageUrl(item),\n      });\n    });\n  }\n\n  render() {\n    const { item, image } = this.state;\n    if (!item) {\n      return <span>Select a item from a list</span>;\n    }\n\n    const { name } = item;\n\n    return (\n      <div className=\"item-details card\">\n        <img className=\"item-image\" src={image} alt=\"item\" />\n\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            {React.Children.map(this.props.children, (child) => {\n              return React.cloneElement(child, { item });\n            })}\n          </ul>\n          <ErrorButton />\n        </div>\n      </div>\n    );\n  }\n}","import ItemDetails, { Record } from './item-details'\n\nexport default ItemDetails\n\nexport { Record };","import React, { Component } from \"react\";\n\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nconst withData = (View) => {\n  return class extends Component {\n    state = {\n      data: null,\n      loading: true,\n      error: false\n    };\n\n    componentDidUpdate(prefProps) {\n      if (this.props.getData !== prefProps.getData) {\n        this.update()\n      }\n    }\n\n    componentDidMount() {\n      this.update()\n    }\n\n    update() {\n      this.setState({\n        loading: true,\n        error: false\n      })\n\n      this.props.getData()\n        .then((data) => {\n          this.setState({\n            data,\n            loading: false\n          })\n        })\n        .catch(() => {\n          this.setState({\n            error: true,\n            loading: false\n          })\n        })\n    }\n\n    render() {\n      const { data, loading, error } = this.state;\n\n      if (loading) {\n        return <Spinner />;\n      }\n\n      if (error) {\n        return <ErrorIndicator />\n      }\n\n      return <View {...this.props} data={data} />;\n    }\n  };\n};\n\nexport default withData;","import React from 'react'\n\nconst {\n  Provider : SwapiServiceProvider,\n  Consumer : SwapiServiceConsumer\n} = React.createContext()\n\nexport {\n  SwapiServiceProvider,\n  SwapiServiceConsumer\n}","import React from 'react'\n\nimport { SwapiServiceConsumer } from \"../swapi-service-context\";\n\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\n  return (props) => {\n    return (\n      <SwapiServiceConsumer>\n        {(swapiService) => {\n          const serviceProps = mapMethodsToProps(swapiService);\n\n          return <Wrapped {...props} {...serviceProps} />;\n        }}\n      </SwapiServiceConsumer>\n    );\n  };\n};\n\nexport default withSwapiService","const compose = (...func) => (comp) => {\n  return func.reduceRight(\n    (prevResult, f) => f(prevResult), comp)\n}\n\nexport default compose\n","import React from 'react'\n\nconst withChildFunction = (fn) => (Wrapped) => {\n  return (props) => {\n    return <Wrapped {...props}>{fn}</Wrapped>;\n  };\n};\n\nexport default withChildFunction","import React from \"react\";\nimport ItemDetails, { Record } from \"../item-details\";\nimport { withSwapiService } from \"../hoc-helpers\";\n\nconst PersonDetails = (props) => {\n  return (\n    <ItemDetails { ... props}>\n      <Record field=\"gender\" label=\"Gender\" />\n      <Record field=\"eyeColor\" label=\"Eye Color\" />\n    </ItemDetails>\n  );\n};\n\nconst mapMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getPerson,\n    getImageUrl: swapiService.getPersonImage\n  }\n}\n\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);\n","import React from \"react\";\nimport ItemDetails, { Record } from \"../item-details\";\nimport { withSwapiService } from '../hoc-helpers'\n\nconst PlanetDetails = (props) => {\n  return (\n    <ItemDetails { ... props}>\n      <Record field=\"population\" label=\"Population\" />\n      <Record field=\"rotationPeriod\" label=\"Rotation Period\" />\n      <Record field=\"diameter\" label=\"Diameter\" />\n    </ItemDetails>\n  );\n};\n\nconst mapMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getPlanet,\n    getImageUrl: swapiService.getPlanetImage\n  }\n}\n\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);\n","import React from \"react\";\nimport ItemDetails, { Record } from \"../item-details\";\nimport { withSwapiService } from '../hoc-helpers'\n\nconst StarshipDetails = (props) => {\n  return (\n    <ItemDetails {...props} >\n      <Record field=\"model\" label=\"Model\" />\n      <Record field=\"length\" label=\"Length\" />\n      <Record field=\"costInCredits\" label=\"Cost\" />\n    </ItemDetails>\n  );\n};\n\nconst mapMethodsToProps = (swapiService) => {\n  return {\n    getData: swapiService.getStarship,\n    getImageUrl: swapiService.getStarshipImage\n  }\n}\n\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nimport { withData } from \"../hoc-helpers\";\nimport SwapiService from '../../services/swapi-service'\nimport \"./item-list.css\";\n\nconst ItemList = (props) => {\n\n  const { data, onItemSelected, children: renderLabel } = props;\n\n  const items = data.map((item) => {\n    const { id } = item;\n    const label = renderLabel(item);\n\n    return (\n      <li\n        className=\"list-group-item\"\n        key={id}\n        onClick={() => onItemSelected(id)}\n      >\n        {label}\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"item-list list-group\">\n      {items}\n    </ul>\n  );\n};\n\nItemList.defaultProps = {\n  onItemSelected: () => {}\n}\n\nItemList.propTypes = {\n  onItemSelected: PropTypes.func,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  children: PropTypes.func.isRequired\n}\n\nconst { getAllPeople } = new SwapiService()\n\nexport default withData(ItemList, getAllPeople)","import ItemList from './item-list.js'\n\nexport default ItemList","import React from \"react\";\nimport ItemList from \"../item-list\";\nimport {\n  withData,\n  withSwapiService,\n  compose,\n  withChildFunction } from \"../hoc-helpers\";\n\nconst renderName = ({ name }) => <span>{name}</span>;\nconst renderModelAndName = ({ model, name }) => (\n  <span>\n    {name} ({model})\n  </span>\n);\n\nconst mapPersonMethodsProps = (swapiService) => {\n  return {\n    getData: swapiService.getAllPeople\n  }\n}\n\nconst mapPlanetMethodsProps = (swapiService) => {\n  return {\n    getData: swapiService.getAllPlanets,\n  };\n};\n\nconst mapStarshipMethodsProps = (swapiService) => {\n  return {\n    getData: swapiService.getAllStarships,\n  };\n};\n\nconst PersonList = compose(\n                    withSwapiService(mapPersonMethodsProps),\n                    withData,\n                    withChildFunction(renderName)\n                  )(ItemList)\n\nconst PlanetList = compose(\n                    withSwapiService(mapPlanetMethodsProps),\n                    withData,\n                    withChildFunction(renderName)\n                  )(ItemList)\n\nconst StarshipList = compose(\n                      withSwapiService(mapStarshipMethodsProps),\n                      withData,\n                      withChildFunction(renderModelAndName),\n                    )(ItemList)\n\nexport { PersonList, PlanetList, StarshipList };\n","import Row from \"./row\";\n\nexport default Row;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './row.css'\n\nconst Row = ({ left, right }) => {\n  return (\n    <div className=\"row mb2\">\n      <div className=\"col-md-6\">\n        {left}\n      </div>\n      <div className=\"col-md-6\">\n        {right}\n      </div>\n    </div>\n  )\n}\n\nRow.propTypes = {\n  left: PropTypes.node,\n  right: PropTypes.node\n}\n\nexport default Row","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { PersonDetails, PersonList } from \"../sw-components\";\nimport Row from '../row'\n\nconst PeoplePage = ({ history, match }) => {\n\n  const { id } = match.params\n\n  return (\n    <div>\n      <h2>People</h2>\n      <Row\n        left={<PersonList onItemSelected={(id) => history.push(id)} />}\n        right={<PersonDetails itemId={id} />}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(PeoplePage)","import React, { Component } from \"react\";\nimport { PlanetDetails, PlanetList } from \"../sw-components\";\nimport Row from \"../row\";\nexport default class PlanetsPage extends Component {\n  state = {\n    selectedItem: null,\n  };\n\n  onItemSelected = (selectedItem) => {\n    this.setState({ selectedItem });\n  };\n\n  render() {\n    const { selectedItem } = this.state;\n    return (\n      <div>\n        <h2>Planets</h2>\n        <Row\n          left={<PlanetList onItemSelected={this.onItemSelected} />}\n          right={<PlanetDetails itemId={selectedItem} />}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { StarshipList } from \"../sw-components\";\nimport { withRouter } from 'react-router-dom'\n\nconst StarshipsPage = ({ history }) => {\n  return (\n    <div>\n      <h2>Starships</h2>\n      <StarshipList onItemSelected={(id) => history.push(id)} />\n    </div>\n  );\n}\n\nexport default withRouter(StarshipsPage);","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/\" />\n  }\n  return (\n    <div className=\"jumbotron\">\n      <p>Login to see secret page!</p>\n      <button\n        className=\"btn btn-primary\"\n        onClick={onLogin}>\n          Login\n        </button>\n    </div>\n  )\n}\n\nexport default LoginPage","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nconst SecretPage = ({isLoggedIn}) => {\n\n  if (isLoggedIn) {\n    return (\n      <div className=\"jumbotron text-center\">\n        <h3>This page is full of secrets!!!</h3>\n      </div>\n    )\n  }\n  return <Redirect to=\"/login\" />\n}\n\nexport default SecretPage","import App from \"./app\";\n\nexport default App;","import React, { Component } from \"react\";\n\nimport Header from \"../header\";\nimport RandomPlanet from \"../random-planet\";\nimport ErrorBoundry from \"../error-boundry\";\nimport SwapiService from \"../../services/swapi-service\";\nimport DummySwapiService from '../../services/dummy-swapi-service'\n\nimport {\n  PeoplePage,\n  PlanetsPage,\n  StarshipsPage,\n  LoginPage,\n  SecretPage } from '../pages'\nimport { SwapiServiceProvider } from '../swapi-service-context'\n\nimport \"./app.css\";\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { StarshipDetails } from \"../sw-components\";\n\nexport default class App extends Component {\n\n  state = {\n    swapiService: new SwapiService(),\n    isLoggedIn: false\n  };\n\n  onLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    })\n  }\n\n  onServiceChange = () => {\n    this.setState(({ swapiService }) => {\n      const Service = swapiService instanceof SwapiService ?\n                        DummySwapiService : SwapiService\n      return {\n        swapiService: new Service()\n      }\n    })\n  }\n\n  render() {\n\n    const { isLoggedIn } = this.state\n\n    return (\n      <ErrorBoundry>\n        <SwapiServiceProvider value={this.state.swapiService}>\n          <Router>\n            <div className=\"stardb-app\">\n              <Header onServiceChange={this.onServiceChange} />\n              <RandomPlanet />\n              <Switch>\n                <Route\n                  path=\"/\"\n                  render={() => <h2>Welcome to Star Wars DB</h2>}\n                  exact\n                />\n                <Route path=\"/people/:id?\" component={PeoplePage} />\n                <Route path=\"/planets\" component={PlanetsPage} />\n                <Route path=\"/starships\" exact component={StarshipsPage} />\n                <Route\n                  path=\"/starships/:id\"\n                  render={({ match }) => {\n                    const { id } = match.params;\n                    return <StarshipDetails itemId={id} />;\n                  }}\n                />\n                <Route\n                  path=\"/login\"\n                  render={() => (\n                    <LoginPage isLoggedIn={isLoggedIn} onLogin={this.onLogin} />\n                  )}\n                />\n                <Route\n                  path=\"/secret\"\n                  render={() => <SecretPage isLoggedIn={isLoggedIn} />}\n                />\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          </Router>\n        </SwapiServiceProvider>\n      </ErrorBoundry>\n    );\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\n\nReactDOM.render(<App />,\n  document.getElementById('root'))"],"sourceRoot":""}